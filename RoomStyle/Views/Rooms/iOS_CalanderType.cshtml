@{
    Layout = null;
}
<!DOCTYPE html>
<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <script src="https://cdnjs.cloudflare.com/ajax/libs/vue/2.7.8/vue.min.js"></script>
    <link href="~/Css/iosCalanderStyle.css" rel="stylesheet" />
    <link href="~/Content/bootstrap.css" rel="stylesheet" />
    <link href="~/fontawesome-free-6.5.2-web/css/all.css" rel="stylesheet" />
    <title>iOS風格的動態月曆與待辦清單</title>
</head>
<body>
    <div id="app">
        <div class="title pagetitle">Vue_Sample - IOS Calendar</div>
        <div class="phone">
            <div class="calender" v-if="days.length > 0">
                <div class="current-month">{{currentMonth}}</div> <!-- 顯示當前月份 -->
                <div class="head flex row">
                    <div class="tag" v-for="tag in tags" :key="tag">{{ tag }}</div>
                </div>
                <div class="body flex">
                    <div class="daybox"
                         v-for="(d, day_id) in days"
                         :style="get_pan(d)"
                         :key="d"
                         v-if="d"
                         :class="{ active: selected === day_id }"
                         click="selected = day_id">
                        <div class="infos">
                            <div class="num">{{ d.number }}</div>
                            <div class="lunar">{{ lunar(d.lunar) }}</div>
                        </div>
                        <div class="eventdot" :class="{ has_event: d.events.length > 0 }"></div>
                    </div>
                </div>
            </div>
            <transition-group tag="div" name="fade" mode="out-in" class="todo_list">
                <div class="item" v-for="(todo, id) in current_items"
                     :class="'type_' + todo.type" :key="todo" v-if="todo">
                    <div class="time">{{ todo.time }}</div>
                    <div class="title">{{ todo.title }}</div>
                    <div class="close_btn" click="current_items.splice(id, 1)">x</div>
                </div>
            </transition-group>
        </div>
        <div class="form">
            <input name="title" v-model="newtodo.title" placeholder="標題" />
            <input name="time" v-model="newtodo.time" placeholder="時間" />
            <select name="type" v-model="newtodo.type" placeholder="種類">
                <option value="work">工作</option>
                <option value="important">重要</option>
                <option value="school">學校</option>
            </select>
            <button type="submit" click="add_item">+</button>
        </div>
    </div>

    <script>
        var vm = new Vue(
            {
            el: "#app",
            data: {
                tags: "日一二三四五六",
                days: [],
                start_day: 1,
                //selected: 25,
                selected: new Date().getDate() -1 ,
                newtodo: {
                    title: "",
                    time: "",
                    type: "important",
                }
            },
            mounted()
            {
                var lunar = 6;
                for (var i = 1; i <= 31; i++)
                {
                    var new_day =
                    {
                        number: i,
                        lunar: lunar,
                        events: []
                    };
                    if (Math.random() < 0.4)
                    {
                        var count = Math.random() * 3;
                        for (var o = 0; o < count; o++)
                        {
                            var minute = parseInt(Math.random() * 3) * 15;
                            new_day.events.push(
                                {
                                    title: ["整理房間丟垃圾", "出門參加活動", "打包行李"][parseInt(Math.random() * 3)],
                                    place: "我的家裡",
                                    unique_id: Math.random() * 100,
                                    time: parseInt(Math.random() * 24) + ":" + (minute == 0 ? "0" : "") + minute,
                                    type: ["work", "important", "school"][parseInt(Math.random() * 3)],
                                }
                            );
                        }
                    }
                    this.days.push(new_day);
                    lunar++;
                }
            },
            methods:
            {
                chinese_num(num)
                {
                    var list = "十一二三四五六七八九";
                    return list[num];
                },
                lunar(num)
                {
                    if (num > 30) num = num % 30;
                    if (num < 11)
                    {
                        return "初" + this.chinese_num(num % 10);
                    }
                    else if (num < 20)
                    {
                        return "十" + this.chinese_num(num % 10);
                    }
                    else if (num == 20)
                    {
                        return "二十";
                    }
                    else if (num < 30)
                    {
                        return "廿" + this.chinese_num(num % 10);
                    }
                    else if (num < 40)
                    {
                        return "三" + this.chinese_num(num % 10);
                    }
                },
                get_pan(d)
                {
                    if (d.number == 1)
                    {
                        return { "margin-left": "calc( " + this.start_day + " * 100% / 7)" };
                    }
                },
                add_item()
                {
                    this.current_day.events.push(JSON.parse(JSON.stringify(this.newtodo)));
                }
            },
            computed:
            {
                current_day()
                {
                    return this.days[this.selected];
                },
                current_items()
                {
                    var day = this.current_day;
                    if (!day)
                        return null;
                    else
                        return day.events
                            .sort((a, b) => (parseInt(a.time.replace(":", "")) - parseInt(b.time.replace(":", ""))));
                },
                currentMonth()
                {
                    const now = new Date();
                    const month = now.getMonth() + 1; // 月份是0-11，所以要+1
                    return `當前月份: ${month}月`;
                }
            }
        });
    </script>
</body>
</html>